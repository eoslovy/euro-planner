# name: euro-planner CI/CD

# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up JDK 18
#       uses: actions/setup-java@v2
#       with:
#         java-version: '18'
#         distribution: 'adopt'
        
#     - name: Grant execute permission for gradlew
#       run: chmod +x gradlew
      
#     - name: Build with Gradle
#       run: ./gradlew build
      
#     - name: Login to DockerHub
#       uses: docker/login-action@v1
#       with:
#         username: ${{secrets.DOCKERHUB_USERNAME}}
#         password: ${{secrets.DOCKERHUB_TOKEN}}

#     - name: build and release to DockerHub 
#       env:
#         NAME: euics # 계정 명
#         REPO: euro-planner # 레포 이름
#       run: |
#         docker build -t $REPO .
#         docker tag $REPO:latest $NAME/$REPO:latest
#         docker push $NAME/$REPO:latest
        
# #     - name: Setup MySQL
# #       uses: samin/mysql-action@v1
# #       with:
# #         character set server: 'utf8' 
# #         mysql database: 'europlanner' 
# #         mysql user: 'root'
# #         mysql password: ${{ secrets.MYSQL_PASSWORD }} # github Secret 탭에서 설정하세요!
        
#   deploy:
#     needs: build
#     name: Deploy
#     runs-on: [ self-hosted ]
#     steps:
#       - name: Docker run
#         run: |
#               sudo docker ps -q --filter "name=euro-planner" | grep -q . && sudo docker stop "euro-planner" && sudo docker rmi  "euics/euro-planner"
#               sudo docker run -d --name euro-planner --rm -p 8080:8080 euics/euro-planner

name: euro-planner CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 18
        uses: actions/setup-java@v1
        with:
          java-version: 18

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew clean build
        shell: bash

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Show Current Time
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"
        shell: bash
